name: release
on:
  push:
    branches: [ master ]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: getversion
        run: |
          PACKAGE_VERSION=$(cat package.json \
             grep version \
             head -1 \
             awk -F: '{ print $2 }' \
             sed 's/[",]//g')       
          echo $PACKAGE_VERSION

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - name: Extract project informations
        id: pom
        run: |
          echo ::set-output name=name::$(grep "<name>" pom.xml | awk -F "name" '{gsub(">|</","",$0); print $2;}')
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)          
          echo ::set-output name=organization::$(grep "<sonar.organization>" pom.xml | awk -F "sonar.organization" '{gsub(">|</","",$0); print $2;}')
          echo ::set-output name=sha_short::$(git rev-parse --short HEAD)  

      - name: Get project informations
        run: |
          echo "Project name: ${{ steps.pom.outputs.name }}"
          echo "Project version: ${{ steps.pom.outputs.version }}"
          echo "Sonar organization: ${{ steps.pom.outputs.organization }}" 
          echo "Short hash: ${{ steps.pom.outputs.sha_short }}"
      
      - name: Generate release number
        id: generate_release_number
        run: |
          echo ::set-output name=release_number::$( echo "${{ steps.pom.outputs.name }}.${{ steps.pom.outputs.version }}.${{ steps.pom.outputs.sha_short }}" ) 
          
      - name: Get release number
        run: |
          echo "New release number: ${{ steps.generate_release_number.outputs.release_number }}"


      - name: Create Releasea
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_release_number.outputs.release_number }}
          release_name: Release ${{ steps.generate_release_number.outputs.release_number }}
          draft: false
          prerelease: false

      - name: Get current date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
